// generated from file '../src/LV2/faust/gxamp6_stereo.dsp' by dsp2cc:
// Code generated with Faust (https://faust.grame.fr)

#include "valve.h"

namespace gxamp6_stereo {

class Dsp: public PluginLV2 {
private:
	uint32_t fSampleRate;
	double fConst0;
	double fConst1;
	double fConst2;
	double fConst3;
	double fConst4;
	double fConst5;
	double fConst6;
	FAUSTFLOAT fVslider0;
	FAUSTFLOAT	*fVslider0_;
	double fConst7;
	double fConst8;
	double fConst9;
	double fConst10;
	double fConst11;
	double fConst12;
	double fConst13;
	double fConst14;
	double fConst15;
	double fConst16;
	double fConst17;
	double fConst18;
	double fConst19;
	double fConst20;
	double fConst21;
	double fConst22;
	double fConst23;
	double fConst24;
	double fConst25;
	double fConst26;
	double fRec29[2];
	double fRec28[3];
	double fConst27;
	double fConst28;
	double fVec0[2];
	double fConst29;
	double fRec30[2];
	double fRec27[2];
	double fRec26[2];
	double fRec40[2];
	double fRec39[3];
	double fConst30;
	double fConst31;
	double fVec1[2];
	double fConst32;
	double fRec41[2];
	double fRec38[2];
	double fRec37[2];
	FAUSTFLOAT fVslider1;
	FAUSTFLOAT	*fVslider1_;
	double fRec46[2];
	double fVec2[2];
	double fRec45[2];
	double fRec44[3];
	double fConst33;
	double fConst34;
	double fVec3[2];
	double fConst35;
	double fRec47[2];
	double fRec43[2];
	double fRec42[2];
	double fRec36[3];
	double fRec35[2];
	double fRec34[2];
	double fRec33[3];
	double fVec4[2];
	double fRec48[2];
	double fRec32[2];
	double fRec31[2];
	double fRec25[3];
	double fRec24[2];
	double fRec23[3];
	double fVec5[2];
	double fRec49[2];
	double fRec22[2];
	double fRec21[2];
	FAUSTFLOAT fVslider2;
	FAUSTFLOAT	*fVslider2_;
	double fRec50[2];
	double fRec51[2];
	int IOTA;
	double fVec6[32768];
	double fConst36;
	int iConst37;
	double fRec53[2];
	double fRec52[2];
	double fConst38;
	double fConst39;
	double fRec20[3];
	double fVec7[2];
	double fConst40;
	double fConst41;
	double fRec19[2];
	double fRec18[2];
	double fConst42;
	double fConst43;
	double fConst44;
	double fConst45;
	double fRec17[3];
	double fVec8[2];
	double fConst46;
	double fConst47;
	double fConst48;
	double fRec16[2];
	double fConst49;
	double fConst50;
	double fRec15[3];
	double fConst51;
	double fConst52;
	double fConst53;
	double fConst54;
	double fConst55;
	double fConst56;
	double fConst57;
	double fConst58;
	double fConst59;
	double fConst60;
	double fRec14[3];
	double fConst61;
	double fRec57[2];
	double fRec56[3];
	double fConst62;
	double fConst63;
	double fConst64;
	double fRec55[3];
	double fRec54[3];
	double fConst65;
	double fConst66;
	double fConst67;
	double fRec61[2];
	double fRec60[3];
	double fVec9[2];
	double fConst68;
	double fConst69;
	double fRec59[2];
	double fConst70;
	double fRec58[3];
	double fConst71;
	double fConst72;
	double fRec63[2];
	double fRec62[3];
	double fVec10[2];
	double fRec13[2];
	double fVec11[2];
	double fRec12[2];
	FAUSTFLOAT fVslider3;
	FAUSTFLOAT	*fVslider3_;
	double fRec64[2];
	double fVec12[2];
	double fRec11[2];
	double fRec10[3];
	double fVec13[2];
	double fRec65[2];
	double fRec9[2];
	double fRec8[2];
	double fVec14[2];
	double fRec68[2];
	double fRec67[2];
	double fRec66[2];
	double fRec6[2];
	double fRec4[2];
	double fRec2[2];
	double fRec0[2];
	double fRec98[2];
	double fRec97[3];
	double fVec15[2];
	double fRec99[2];
	double fRec96[2];
	double fRec95[2];
	double fRec109[2];
	double fRec108[3];
	double fVec16[2];
	double fRec110[2];
	double fRec107[2];
	double fRec106[2];
	double fVec17[2];
	double fRec114[2];
	double fRec113[3];
	double fVec18[2];
	double fRec115[2];
	double fRec112[2];
	double fRec111[2];
	double fRec105[3];
	double fRec104[2];
	double fRec103[2];
	double fRec102[3];
	double fVec19[2];
	double fRec116[2];
	double fRec101[2];
	double fRec100[2];
	double fRec94[3];
	double fRec93[2];
	double fRec92[3];
	double fVec20[2];
	double fRec117[2];
	double fRec91[2];
	double fRec90[2];
	double fRec118[2];
	double fVec21[32768];
	double fRec120[2];
	double fRec119[2];
	double fRec89[3];
	double fVec22[2];
	double fRec88[2];
	double fRec87[2];
	double fRec86[3];
	double fVec23[2];
	double fRec85[2];
	double fRec84[3];
	double fRec83[3];
	double fRec124[2];
	double fRec123[3];
	double fRec122[3];
	double fRec121[3];
	double fRec128[2];
	double fRec127[3];
	double fVec24[2];
	double fRec126[2];
	double fRec125[3];
	double fRec130[2];
	double fRec129[3];
	double fVec25[2];
	double fRec82[2];
	double fVec26[2];
	double fRec81[2];
	double fVec27[2];
	double fRec80[2];
	double fRec79[3];
	double fVec28[2];
	double fRec131[2];
	double fRec78[2];
	double fRec77[2];
	double fVec29[2];
	double fRec134[2];
	double fRec133[2];
	double fRec132[2];
	double fRec75[2];
	double fRec73[2];
	double fRec71[2];
	double fRec69[2];

	void connect(uint32_t port,void* data);
	void clear_state_f();
	void init(uint32_t sample_rate);
	void compute(int count, FAUSTFLOAT *input0, FAUSTFLOAT *input1, FAUSTFLOAT *output0, FAUSTFLOAT *output1);

	static void clear_state_f_static(PluginLV2*);
	static void init_static(uint32_t sample_rate, PluginLV2*);
	static void compute_static(int count, FAUSTFLOAT *input0, FAUSTFLOAT *input1, FAUSTFLOAT *output0, FAUSTFLOAT *output1, PluginLV2*);
	static void del_instance(PluginLV2 *p);
	static void connect_static(uint32_t port,void* data, PluginLV2 *p);
public:
	Dsp();
	~Dsp();
};



Dsp::Dsp()
	: PluginLV2() {
	version = PLUGINLV2_VERSION;
	id = "pre 6DJ8/ push-pull 6V6";
	name = N_("pre 6DJ8/ push-pull 6V6");
	mono_audio = 0;
	stereo_audio = compute_static;
	set_samplerate = init_static;
	activate_plugin = 0;
	connect_ports = connect_static;
	clear_state = clear_state_f_static;
	delete_instance = del_instance;
}

Dsp::~Dsp() {
}

inline void Dsp::clear_state_f()
{
	for (int l0 = 0; (l0 < 2); l0 = (l0 + 1)) fRec29[l0] = 0.0;
	for (int l1 = 0; (l1 < 3); l1 = (l1 + 1)) fRec28[l1] = 0.0;
	for (int l2 = 0; (l2 < 2); l2 = (l2 + 1)) fVec0[l2] = 0.0;
	for (int l3 = 0; (l3 < 2); l3 = (l3 + 1)) fRec30[l3] = 0.0;
	for (int l4 = 0; (l4 < 2); l4 = (l4 + 1)) fRec27[l4] = 0.0;
	for (int l5 = 0; (l5 < 2); l5 = (l5 + 1)) fRec26[l5] = 0.0;
	for (int l6 = 0; (l6 < 2); l6 = (l6 + 1)) fRec40[l6] = 0.0;
	for (int l7 = 0; (l7 < 3); l7 = (l7 + 1)) fRec39[l7] = 0.0;
	for (int l8 = 0; (l8 < 2); l8 = (l8 + 1)) fVec1[l8] = 0.0;
	for (int l9 = 0; (l9 < 2); l9 = (l9 + 1)) fRec41[l9] = 0.0;
	for (int l10 = 0; (l10 < 2); l10 = (l10 + 1)) fRec38[l10] = 0.0;
	for (int l11 = 0; (l11 < 2); l11 = (l11 + 1)) fRec37[l11] = 0.0;
	for (int l12 = 0; (l12 < 2); l12 = (l12 + 1)) fRec46[l12] = 0.0;
	for (int l13 = 0; (l13 < 2); l13 = (l13 + 1)) fVec2[l13] = 0.0;
	for (int l14 = 0; (l14 < 2); l14 = (l14 + 1)) fRec45[l14] = 0.0;
	for (int l15 = 0; (l15 < 3); l15 = (l15 + 1)) fRec44[l15] = 0.0;
	for (int l16 = 0; (l16 < 2); l16 = (l16 + 1)) fVec3[l16] = 0.0;
	for (int l17 = 0; (l17 < 2); l17 = (l17 + 1)) fRec47[l17] = 0.0;
	for (int l18 = 0; (l18 < 2); l18 = (l18 + 1)) fRec43[l18] = 0.0;
	for (int l19 = 0; (l19 < 2); l19 = (l19 + 1)) fRec42[l19] = 0.0;
	for (int l20 = 0; (l20 < 3); l20 = (l20 + 1)) fRec36[l20] = 0.0;
	for (int l21 = 0; (l21 < 2); l21 = (l21 + 1)) fRec35[l21] = 0.0;
	for (int l22 = 0; (l22 < 2); l22 = (l22 + 1)) fRec34[l22] = 0.0;
	for (int l23 = 0; (l23 < 3); l23 = (l23 + 1)) fRec33[l23] = 0.0;
	for (int l24 = 0; (l24 < 2); l24 = (l24 + 1)) fVec4[l24] = 0.0;
	for (int l25 = 0; (l25 < 2); l25 = (l25 + 1)) fRec48[l25] = 0.0;
	for (int l26 = 0; (l26 < 2); l26 = (l26 + 1)) fRec32[l26] = 0.0;
	for (int l27 = 0; (l27 < 2); l27 = (l27 + 1)) fRec31[l27] = 0.0;
	for (int l28 = 0; (l28 < 3); l28 = (l28 + 1)) fRec25[l28] = 0.0;
	for (int l29 = 0; (l29 < 2); l29 = (l29 + 1)) fRec24[l29] = 0.0;
	for (int l30 = 0; (l30 < 3); l30 = (l30 + 1)) fRec23[l30] = 0.0;
	for (int l31 = 0; (l31 < 2); l31 = (l31 + 1)) fVec5[l31] = 0.0;
	for (int l32 = 0; (l32 < 2); l32 = (l32 + 1)) fRec49[l32] = 0.0;
	for (int l33 = 0; (l33 < 2); l33 = (l33 + 1)) fRec22[l33] = 0.0;
	for (int l34 = 0; (l34 < 2); l34 = (l34 + 1)) fRec21[l34] = 0.0;
	for (int l35 = 0; (l35 < 2); l35 = (l35 + 1)) fRec50[l35] = 0.0;
	for (int l36 = 0; (l36 < 2); l36 = (l36 + 1)) fRec51[l36] = 0.0;
	for (int l37 = 0; (l37 < 32768); l37 = (l37 + 1)) fVec6[l37] = 0.0;
	for (int l38 = 0; (l38 < 2); l38 = (l38 + 1)) fRec53[l38] = 0.0;
	for (int l39 = 0; (l39 < 2); l39 = (l39 + 1)) fRec52[l39] = 0.0;
	for (int l40 = 0; (l40 < 3); l40 = (l40 + 1)) fRec20[l40] = 0.0;
	for (int l41 = 0; (l41 < 2); l41 = (l41 + 1)) fVec7[l41] = 0.0;
	for (int l42 = 0; (l42 < 2); l42 = (l42 + 1)) fRec19[l42] = 0.0;
	for (int l43 = 0; (l43 < 2); l43 = (l43 + 1)) fRec18[l43] = 0.0;
	for (int l44 = 0; (l44 < 3); l44 = (l44 + 1)) fRec17[l44] = 0.0;
	for (int l45 = 0; (l45 < 2); l45 = (l45 + 1)) fVec8[l45] = 0.0;
	for (int l46 = 0; (l46 < 2); l46 = (l46 + 1)) fRec16[l46] = 0.0;
	for (int l47 = 0; (l47 < 3); l47 = (l47 + 1)) fRec15[l47] = 0.0;
	for (int l48 = 0; (l48 < 3); l48 = (l48 + 1)) fRec14[l48] = 0.0;
	for (int l49 = 0; (l49 < 2); l49 = (l49 + 1)) fRec57[l49] = 0.0;
	for (int l50 = 0; (l50 < 3); l50 = (l50 + 1)) fRec56[l50] = 0.0;
	for (int l51 = 0; (l51 < 3); l51 = (l51 + 1)) fRec55[l51] = 0.0;
	for (int l52 = 0; (l52 < 3); l52 = (l52 + 1)) fRec54[l52] = 0.0;
	for (int l53 = 0; (l53 < 2); l53 = (l53 + 1)) fRec61[l53] = 0.0;
	for (int l54 = 0; (l54 < 3); l54 = (l54 + 1)) fRec60[l54] = 0.0;
	for (int l55 = 0; (l55 < 2); l55 = (l55 + 1)) fVec9[l55] = 0.0;
	for (int l56 = 0; (l56 < 2); l56 = (l56 + 1)) fRec59[l56] = 0.0;
	for (int l57 = 0; (l57 < 3); l57 = (l57 + 1)) fRec58[l57] = 0.0;
	for (int l58 = 0; (l58 < 2); l58 = (l58 + 1)) fRec63[l58] = 0.0;
	for (int l59 = 0; (l59 < 3); l59 = (l59 + 1)) fRec62[l59] = 0.0;
	for (int l60 = 0; (l60 < 2); l60 = (l60 + 1)) fVec10[l60] = 0.0;
	for (int l61 = 0; (l61 < 2); l61 = (l61 + 1)) fRec13[l61] = 0.0;
	for (int l62 = 0; (l62 < 2); l62 = (l62 + 1)) fVec11[l62] = 0.0;
	for (int l63 = 0; (l63 < 2); l63 = (l63 + 1)) fRec12[l63] = 0.0;
	for (int l64 = 0; (l64 < 2); l64 = (l64 + 1)) fRec64[l64] = 0.0;
	for (int l65 = 0; (l65 < 2); l65 = (l65 + 1)) fVec12[l65] = 0.0;
	for (int l66 = 0; (l66 < 2); l66 = (l66 + 1)) fRec11[l66] = 0.0;
	for (int l67 = 0; (l67 < 3); l67 = (l67 + 1)) fRec10[l67] = 0.0;
	for (int l68 = 0; (l68 < 2); l68 = (l68 + 1)) fVec13[l68] = 0.0;
	for (int l69 = 0; (l69 < 2); l69 = (l69 + 1)) fRec65[l69] = 0.0;
	for (int l70 = 0; (l70 < 2); l70 = (l70 + 1)) fRec9[l70] = 0.0;
	for (int l71 = 0; (l71 < 2); l71 = (l71 + 1)) fRec8[l71] = 0.0;
	for (int l72 = 0; (l72 < 2); l72 = (l72 + 1)) fVec14[l72] = 0.0;
	for (int l73 = 0; (l73 < 2); l73 = (l73 + 1)) fRec68[l73] = 0.0;
	for (int l74 = 0; (l74 < 2); l74 = (l74 + 1)) fRec67[l74] = 0.0;
	for (int l75 = 0; (l75 < 2); l75 = (l75 + 1)) fRec66[l75] = 0.0;
	for (int l76 = 0; (l76 < 2); l76 = (l76 + 1)) fRec6[l76] = 0.0;
	for (int l77 = 0; (l77 < 2); l77 = (l77 + 1)) fRec4[l77] = 0.0;
	for (int l78 = 0; (l78 < 2); l78 = (l78 + 1)) fRec2[l78] = 0.0;
	for (int l79 = 0; (l79 < 2); l79 = (l79 + 1)) fRec0[l79] = 0.0;
	for (int l80 = 0; (l80 < 2); l80 = (l80 + 1)) fRec98[l80] = 0.0;
	for (int l81 = 0; (l81 < 3); l81 = (l81 + 1)) fRec97[l81] = 0.0;
	for (int l82 = 0; (l82 < 2); l82 = (l82 + 1)) fVec15[l82] = 0.0;
	for (int l83 = 0; (l83 < 2); l83 = (l83 + 1)) fRec99[l83] = 0.0;
	for (int l84 = 0; (l84 < 2); l84 = (l84 + 1)) fRec96[l84] = 0.0;
	for (int l85 = 0; (l85 < 2); l85 = (l85 + 1)) fRec95[l85] = 0.0;
	for (int l86 = 0; (l86 < 2); l86 = (l86 + 1)) fRec109[l86] = 0.0;
	for (int l87 = 0; (l87 < 3); l87 = (l87 + 1)) fRec108[l87] = 0.0;
	for (int l88 = 0; (l88 < 2); l88 = (l88 + 1)) fVec16[l88] = 0.0;
	for (int l89 = 0; (l89 < 2); l89 = (l89 + 1)) fRec110[l89] = 0.0;
	for (int l90 = 0; (l90 < 2); l90 = (l90 + 1)) fRec107[l90] = 0.0;
	for (int l91 = 0; (l91 < 2); l91 = (l91 + 1)) fRec106[l91] = 0.0;
	for (int l92 = 0; (l92 < 2); l92 = (l92 + 1)) fVec17[l92] = 0.0;
	for (int l93 = 0; (l93 < 2); l93 = (l93 + 1)) fRec114[l93] = 0.0;
	for (int l94 = 0; (l94 < 3); l94 = (l94 + 1)) fRec113[l94] = 0.0;
	for (int l95 = 0; (l95 < 2); l95 = (l95 + 1)) fVec18[l95] = 0.0;
	for (int l96 = 0; (l96 < 2); l96 = (l96 + 1)) fRec115[l96] = 0.0;
	for (int l97 = 0; (l97 < 2); l97 = (l97 + 1)) fRec112[l97] = 0.0;
	for (int l98 = 0; (l98 < 2); l98 = (l98 + 1)) fRec111[l98] = 0.0;
	for (int l99 = 0; (l99 < 3); l99 = (l99 + 1)) fRec105[l99] = 0.0;
	for (int l100 = 0; (l100 < 2); l100 = (l100 + 1)) fRec104[l100] = 0.0;
	for (int l101 = 0; (l101 < 2); l101 = (l101 + 1)) fRec103[l101] = 0.0;
	for (int l102 = 0; (l102 < 3); l102 = (l102 + 1)) fRec102[l102] = 0.0;
	for (int l103 = 0; (l103 < 2); l103 = (l103 + 1)) fVec19[l103] = 0.0;
	for (int l104 = 0; (l104 < 2); l104 = (l104 + 1)) fRec116[l104] = 0.0;
	for (int l105 = 0; (l105 < 2); l105 = (l105 + 1)) fRec101[l105] = 0.0;
	for (int l106 = 0; (l106 < 2); l106 = (l106 + 1)) fRec100[l106] = 0.0;
	for (int l107 = 0; (l107 < 3); l107 = (l107 + 1)) fRec94[l107] = 0.0;
	for (int l108 = 0; (l108 < 2); l108 = (l108 + 1)) fRec93[l108] = 0.0;
	for (int l109 = 0; (l109 < 3); l109 = (l109 + 1)) fRec92[l109] = 0.0;
	for (int l110 = 0; (l110 < 2); l110 = (l110 + 1)) fVec20[l110] = 0.0;
	for (int l111 = 0; (l111 < 2); l111 = (l111 + 1)) fRec117[l111] = 0.0;
	for (int l112 = 0; (l112 < 2); l112 = (l112 + 1)) fRec91[l112] = 0.0;
	for (int l113 = 0; (l113 < 2); l113 = (l113 + 1)) fRec90[l113] = 0.0;
	for (int l114 = 0; (l114 < 2); l114 = (l114 + 1)) fRec118[l114] = 0.0;
	for (int l115 = 0; (l115 < 32768); l115 = (l115 + 1)) fVec21[l115] = 0.0;
	for (int l116 = 0; (l116 < 2); l116 = (l116 + 1)) fRec120[l116] = 0.0;
	for (int l117 = 0; (l117 < 2); l117 = (l117 + 1)) fRec119[l117] = 0.0;
	for (int l118 = 0; (l118 < 3); l118 = (l118 + 1)) fRec89[l118] = 0.0;
	for (int l119 = 0; (l119 < 2); l119 = (l119 + 1)) fVec22[l119] = 0.0;
	for (int l120 = 0; (l120 < 2); l120 = (l120 + 1)) fRec88[l120] = 0.0;
	for (int l121 = 0; (l121 < 2); l121 = (l121 + 1)) fRec87[l121] = 0.0;
	for (int l122 = 0; (l122 < 3); l122 = (l122 + 1)) fRec86[l122] = 0.0;
	for (int l123 = 0; (l123 < 2); l123 = (l123 + 1)) fVec23[l123] = 0.0;
	for (int l124 = 0; (l124 < 2); l124 = (l124 + 1)) fRec85[l124] = 0.0;
	for (int l125 = 0; (l125 < 3); l125 = (l125 + 1)) fRec84[l125] = 0.0;
	for (int l126 = 0; (l126 < 3); l126 = (l126 + 1)) fRec83[l126] = 0.0;
	for (int l127 = 0; (l127 < 2); l127 = (l127 + 1)) fRec124[l127] = 0.0;
	for (int l128 = 0; (l128 < 3); l128 = (l128 + 1)) fRec123[l128] = 0.0;
	for (int l129 = 0; (l129 < 3); l129 = (l129 + 1)) fRec122[l129] = 0.0;
	for (int l130 = 0; (l130 < 3); l130 = (l130 + 1)) fRec121[l130] = 0.0;
	for (int l131 = 0; (l131 < 2); l131 = (l131 + 1)) fRec128[l131] = 0.0;
	for (int l132 = 0; (l132 < 3); l132 = (l132 + 1)) fRec127[l132] = 0.0;
	for (int l133 = 0; (l133 < 2); l133 = (l133 + 1)) fVec24[l133] = 0.0;
	for (int l134 = 0; (l134 < 2); l134 = (l134 + 1)) fRec126[l134] = 0.0;
	for (int l135 = 0; (l135 < 3); l135 = (l135 + 1)) fRec125[l135] = 0.0;
	for (int l136 = 0; (l136 < 2); l136 = (l136 + 1)) fRec130[l136] = 0.0;
	for (int l137 = 0; (l137 < 3); l137 = (l137 + 1)) fRec129[l137] = 0.0;
	for (int l138 = 0; (l138 < 2); l138 = (l138 + 1)) fVec25[l138] = 0.0;
	for (int l139 = 0; (l139 < 2); l139 = (l139 + 1)) fRec82[l139] = 0.0;
	for (int l140 = 0; (l140 < 2); l140 = (l140 + 1)) fVec26[l140] = 0.0;
	for (int l141 = 0; (l141 < 2); l141 = (l141 + 1)) fRec81[l141] = 0.0;
	for (int l142 = 0; (l142 < 2); l142 = (l142 + 1)) fVec27[l142] = 0.0;
	for (int l143 = 0; (l143 < 2); l143 = (l143 + 1)) fRec80[l143] = 0.0;
	for (int l144 = 0; (l144 < 3); l144 = (l144 + 1)) fRec79[l144] = 0.0;
	for (int l145 = 0; (l145 < 2); l145 = (l145 + 1)) fVec28[l145] = 0.0;
	for (int l146 = 0; (l146 < 2); l146 = (l146 + 1)) fRec131[l146] = 0.0;
	for (int l147 = 0; (l147 < 2); l147 = (l147 + 1)) fRec78[l147] = 0.0;
	for (int l148 = 0; (l148 < 2); l148 = (l148 + 1)) fRec77[l148] = 0.0;
	for (int l149 = 0; (l149 < 2); l149 = (l149 + 1)) fVec29[l149] = 0.0;
	for (int l150 = 0; (l150 < 2); l150 = (l150 + 1)) fRec134[l150] = 0.0;
	for (int l151 = 0; (l151 < 2); l151 = (l151 + 1)) fRec133[l151] = 0.0;
	for (int l152 = 0; (l152 < 2); l152 = (l152 + 1)) fRec132[l152] = 0.0;
	for (int l153 = 0; (l153 < 2); l153 = (l153 + 1)) fRec75[l153] = 0.0;
	for (int l154 = 0; (l154 < 2); l154 = (l154 + 1)) fRec73[l154] = 0.0;
	for (int l155 = 0; (l155 < 2); l155 = (l155 + 1)) fRec71[l155] = 0.0;
	for (int l156 = 0; (l156 < 2); l156 = (l156 + 1)) fRec69[l156] = 0.0;
}

void Dsp::clear_state_f_static(PluginLV2 *p)
{
	static_cast<Dsp*>(p)->clear_state_f();
}

inline void Dsp::init(uint32_t sample_rate)
{
	fSampleRate = sample_rate;
	fConst0 = std::min<double>(192000.0, std::max<double>(1.0, double(fSampleRate)));
	fConst1 = (3.1415926535897931 / fConst0);
	fConst2 = (1.0 / (fConst1 + 1.0));
	fConst3 = (1.0 - fConst1);
	fConst4 = (1.0 / std::tan((20517.741620594938 / fConst0)));
	fConst5 = (1.0 / (fConst4 + 1.0));
	fConst6 = (1.0 - fConst4);
	fConst7 = std::tan((3769.9111843077517 / fConst0));
	fConst8 = (1.0 / fConst7);
	fConst9 = (1.0 / (((fConst8 + 1.0000000000000004) / fConst7) + 1.0));
	fConst10 = mydsp_faustpower2_f(fConst7);
	fConst11 = (1.0 / fConst10);
	fConst12 = std::tan((10053.096491487338 / fConst0));
	fConst13 = (1.0 / fConst12);
	fConst14 = (1.0 / (((fConst13 + 1.0000000000000004) / fConst12) + 1.0));
	fConst15 = (fConst8 + 1.0);
	fConst16 = (1.0 / (fConst7 * fConst15));
	fConst17 = (fConst13 + 1.0);
	fConst18 = (1.0 / fConst17);
	fConst19 = (1.0 - fConst13);
	fConst20 = std::tan((47123.889803846898 / fConst0));
	fConst21 = (1.0 / fConst20);
	fConst22 = (1.0 / (((fConst21 + 1.4142135623730949) / fConst20) + 1.0));
	fConst23 = std::tan((97.389372261283583 / fConst0));
	fConst24 = (1.0 / fConst23);
	fConst25 = (fConst24 + 1.0);
	fConst26 = (1.0 / (fConst23 * fConst25));
	fConst27 = (1.0 / std::tan((609.46897479641984 / fConst0)));
	fConst28 = (1.0 / (fConst27 + 1.0));
	fConst29 = (1.0 - fConst27);
	fConst30 = (1.0 / std::tan((414.69023027385271 / fConst0)));
	fConst31 = (1.0 / (fConst30 + 1.0));
	fConst32 = (1.0 - fConst30);
	fConst33 = (1.0 / std::tan((270.1769682087222 / fConst0)));
	fConst34 = (1.0 / (fConst33 + 1.0));
	fConst35 = (1.0 - fConst33);
	fConst36 = (0.009000000000000008 / fConst0);
	iConst37 = int(std::min<double>(65536.0, std::max<double>(0.0, (0.1111111111111111 * fConst0))));
	fConst38 = (((fConst21 + -1.4142135623730949) / fConst20) + 1.0);
	fConst39 = (2.0 * (1.0 - (1.0 / mydsp_faustpower2_f(fConst20))));
	fConst40 = (0.0 - fConst26);
	fConst41 = ((1.0 - fConst24) / fConst25);
	fConst42 = (((fConst13 + -1.0000000000000004) / fConst12) + 1.0);
	fConst43 = mydsp_faustpower2_f(fConst12);
	fConst44 = (1.0 / fConst43);
	fConst45 = (2.0 * (1.0 - fConst44));
	fConst46 = (0.0 - fConst16);
	fConst47 = (1.0 - fConst8);
	fConst48 = (fConst47 / fConst15);
	fConst49 = (((fConst8 + -1.0000000000000004) / fConst7) + 1.0);
	fConst50 = (2.0 * (1.0 - fConst11));
	fConst51 = (0.0 - (2.0 / fConst10));
	fConst52 = std::tan((942.47779607693792 / fConst0));
	fConst53 = (1.0 / fConst52);
	fConst54 = (fConst53 + 1.0);
	fConst55 = (1.0 / ((fConst54 / fConst52) + 1.0));
	fConst56 = (1.0 - fConst53);
	fConst57 = (1.0 - (fConst56 / fConst52));
	fConst58 = mydsp_faustpower2_f(fConst52);
	fConst59 = (1.0 / fConst58);
	fConst60 = (2.0 * (1.0 - fConst59));
	fConst61 = (0.0 - (1.0 / (fConst12 * fConst17)));
	fConst62 = (0.0 - (2.0 / fConst43));
	fConst63 = (1.0 / ((fConst15 / fConst7) + 1.0));
	fConst64 = (1.0 - (fConst47 / fConst7));
	fConst65 = (1.0 / (((fConst53 + 1.0000000000000004) / fConst52) + 1.0));
	fConst66 = (1.0 / (fConst52 * fConst54));
	fConst67 = (1.0 / fConst15);
	fConst68 = (0.0 - fConst66);
	fConst69 = (fConst56 / fConst54);
	fConst70 = (((fConst53 + -1.0000000000000004) / fConst52) + 1.0);
	fConst71 = (0.0 - (2.0 / fConst58));
	fConst72 = (1.0 / fConst54);
	IOTA = 0;
	clear_state_f();
}

void Dsp::init_static(uint32_t sample_rate, PluginLV2 *p)
{
	static_cast<Dsp*>(p)->init(sample_rate);
}

void always_inline Dsp::compute(int count, FAUSTFLOAT *input0, FAUSTFLOAT *input1, FAUSTFLOAT *output0, FAUSTFLOAT *output1)
{
#define fVslider0 (*fVslider0_)
#define fVslider1 (*fVslider1_)
#define fVslider2 (*fVslider2_)
#define fVslider3 (*fVslider3_)
	double fSlow0 = double(fVslider0);
	double fSlow1 = (2.0 * (fSlow0 + -0.5));
	double fSlow2 = (1.0 - std::max<double>(0.0, (-1.0 * fSlow1)));
	double fSlow3 = std::pow(10.0, (1.2 * fSlow0));
	double fSlow4 = (0.0010000000000000009 * std::pow(10.0, (0.050000000000000003 * double(fVslider1))));
	double fSlow5 = (1.0000000000000009e-05 * double(fVslider2));
	double fSlow6 = std::pow(10.0, (0.80000000000000004 * fSlow0));
	double fSlow7 = (fConst65 * std::pow(10.0, (2.0 * fSlow0)));
	double fSlow8 = (fConst65 * std::pow(10.0, (0.90000000000000002 * fSlow0)));
	double fSlow9 = (1.25 * fSlow0);
	double fSlow10 = (0.024937655860349125 * (1.0 - std::max<double>(0.0, fSlow1)));
	double fSlow11 = (0.0010000000000000009 * std::pow(10.0, (0.050000000000000003 * double(fVslider3))));
	for (int i = 0; (i < count); i = (i + 1)) {
		fRec29[0] = ((0.93028479253239138 * (fRec25[1] + fRec25[2])) - (0.86056958506478287 * fRec29[1]));
		fRec28[0] = (fRec29[0] - ((1.8405051250752198 * fRec28[1]) + (0.86129424393186271 * fRec28[2])));
		double fTemp0 = (0.92544984225177063 * (fRec28[0] + fRec28[2]));
		double fTemp1 = (1.8508996845035413 * fRec28[1]);
		double fTemp2 = ((fTemp1 + fTemp0) / (double(Ranode(int(TUBE_TABLE_6DJ8_250k), double(fRec27[1]))) + 100000.0));
		fVec0[0] = fTemp2;
		fRec30[0] = (fConst28 * ((820.0 * (fTemp2 + fVec0[1])) - (fConst29 * fRec30[1])));
		double fTemp3 = double(Ftube(int(TUBE_TABLE_6DJ8_250k), double(((fTemp0 + (fRec30[0] + fTemp1)) + -0.79704299999999995))));
		fRec27[0] = ((fTemp3 + (0.00097200365853658533 * (double(Ranode(int(TUBE_TABLE_6DJ8_250k), double(fTemp3))) + 100000.0))) + -130.0);
		fRec26[0] = (fConst2 * ((fConst3 * fRec26[1]) + (0.050000000000000003 * (fRec27[0] - fRec27[1]))));
		fRec40[0] = ((0.93028479253239138 * (fRec36[1] + fRec36[2])) - (0.86056958506478287 * fRec40[1]));
		fRec39[0] = (fRec40[0] - ((1.8405051250752198 * fRec39[1]) + (0.86129424393186271 * fRec39[2])));
		double fTemp4 = (0.92544984225177063 * (fRec39[0] + fRec39[2]));
		double fTemp5 = (1.8508996845035413 * fRec39[1]);
		double fTemp6 = ((fTemp5 + fTemp4) / (double(Ranode(int(TUBE_TABLE_6DJ8_250k), double(fRec38[1]))) + 100000.0));
		fVec1[0] = fTemp6;
		fRec41[0] = (fConst31 * ((1500.0 * (fTemp6 + fVec1[1])) - (fConst32 * fRec41[1])));
		double fTemp7 = double(Ftube(int(TUBE_TABLE_6DJ8_250k), double(((fTemp4 + (fRec41[0] + fTemp5)) + -1.271609))));
		fRec38[0] = ((fTemp7 + (0.00084773933333333329 * (double(Ranode(int(TUBE_TABLE_6DJ8_250k), double(fTemp7))) + 100000.0))) + -130.0);
		fRec37[0] = (fConst2 * ((fConst3 * fRec37[1]) + (0.050000000000000003 * (fRec38[0] - fRec38[1]))));
		fRec46[0] = (fSlow4 + (0.999 * fRec46[1]));
		double fTemp8 = (double(input0[i]) * fRec46[0]);
		fVec2[0] = fTemp8;
		fRec45[0] = ((0.93028479253239138 * (fTemp8 + fVec2[1])) - (0.86056958506478287 * fRec45[1]));
		fRec44[0] = (fRec45[0] - ((1.8405051250752198 * fRec44[1]) + (0.86129424393186271 * fRec44[2])));
		double fTemp9 = (0.92544984225177063 * (fRec44[0] + fRec44[2]));
		double fTemp10 = (1.8508996845035413 * fRec44[1]);
		double fTemp11 = ((fTemp10 + fTemp9) / (double(Ranode(int(TUBE_TABLE_6DJ8_68k), double(fRec43[1]))) + 100000.0));
		fVec3[0] = fTemp11;
		fRec47[0] = (fConst34 * ((2700.0 * (fTemp11 + fVec3[1])) - (fConst35 * fRec47[1])));
		double fTemp12 = double(Ftube(int(TUBE_TABLE_6DJ8_68k), double(((fTemp9 + (fRec47[0] + fTemp10)) + -1.8639460000000001))));
		fRec43[0] = ((fTemp12 + (0.00069035037037037039 * (double(Ranode(int(TUBE_TABLE_6DJ8_68k), double(fTemp12))) + 100000.0))) + -130.0);
		fRec42[0] = (fConst2 * ((fConst3 * fRec42[1]) + (0.050000000000000003 * (fRec43[0] - fRec43[1]))));
		fRec36[0] = ((0.59999999999999998 * fRec37[0]) + fRec42[0]);
		fRec35[0] = (0.0 - (fConst5 * ((fConst6 * fRec35[1]) - (fRec36[0] + fRec36[1]))));
		fRec34[0] = ((0.93028479253239138 * (fRec35[0] + fRec35[1])) - (0.86056958506478287 * fRec34[1]));
		fRec33[0] = (fRec34[0] - ((1.8405051250752198 * fRec33[1]) + (0.86129424393186271 * fRec33[2])));
		double fTemp13 = (0.92544984225177063 * (fRec33[0] + fRec33[2]));
		double fTemp14 = (1.8508996845035413 * fRec33[1]);
		double fTemp15 = ((fTemp14 + fTemp13) / (double(Ranode(int(TUBE_TABLE_6DJ8_250k), double(fRec32[1]))) + 100000.0));
		fVec4[0] = fTemp15;
		fRec48[0] = (fConst31 * ((1500.0 * (fTemp15 + fVec4[1])) - (fConst32 * fRec48[1])));
		double fTemp16 = double(Ftube(int(TUBE_TABLE_6DJ8_250k), double(((fTemp13 + (fRec48[0] + fTemp14)) + -1.271609))));
		fRec32[0] = ((fTemp16 + (0.00084773933333333329 * (double(Ranode(int(TUBE_TABLE_6DJ8_250k), double(fTemp16))) + 100000.0))) + -130.0);
		fRec31[0] = (fConst2 * ((fConst3 * fRec31[1]) + (0.050000000000000003 * (fRec32[0] - fRec32[1]))));
		fRec25[0] = ((0.59999999999999998 * fRec26[0]) + fRec31[0]);
		fRec24[0] = ((0.93028479253239138 * (fRec25[0] + fRec25[1])) - (0.86056958506478287 * fRec24[1]));
		fRec23[0] = (fRec24[0] - ((1.8405051250752198 * fRec23[1]) + (0.86129424393186271 * fRec23[2])));
		double fTemp17 = (0.92544984225177063 * (fRec23[0] + fRec23[2]));
		double fTemp18 = (1.8508996845035413 * fRec23[1]);
		double fTemp19 = ((fTemp18 + fTemp17) / (double(Ranode(int(TUBE_TABLE_6DJ8_250k), double(fRec22[1]))) + 100000.0));
		fVec5[0] = fTemp19;
		fRec49[0] = (fConst28 * ((820.0 * (fTemp19 + fVec5[1])) - (fConst29 * fRec49[1])));
		double fTemp20 = double(Ftube(int(TUBE_TABLE_6DJ8_250k), double(((fTemp17 + (fRec49[0] + fTemp18)) + -0.79704299999999995))));
		fRec22[0] = ((fTemp20 + (0.00097200365853658533 * (double(Ranode(int(TUBE_TABLE_6DJ8_250k), double(fTemp20))) + 100000.0))) + -130.0);
		fRec21[0] = (fConst2 * ((fConst3 * fRec21[1]) + (0.050000000000000003 * (fRec22[0] - fRec22[1]))));
		fRec50[0] = (fSlow5 + (0.999 * fRec50[1]));
		double fTemp21 = (fRec21[0] * fRec50[0]);
		double fTemp22 = std::fabs(fTemp21);
		fRec51[0] = ((0.99990000000000001 * fRec51[1]) + (9.9999999999988987e-05 * fTemp22));
		double fTemp23 = std::max<double>(fRec51[0], fTemp22);
		fVec6[(IOTA & 32767)] = fTemp23;
		fRec53[0] = ((fTemp23 + fRec53[1]) - fVec6[((IOTA - iConst37) & 32767)]);
		fRec52[0] = ((0.999 * fRec52[1]) + (fConst36 * fRec53[0]));
		double fTemp24 = std::max<double>(-1.0, std::min<double>(-0.01, (fTemp23 + (-1.0 - (1.02 * fRec52[0])))));
		double fTemp25 = (fTemp21 - fTemp24);
		double fTemp26 = (40.100000000000001 * fTemp25);
		double fTemp27 = std::max<double>(-600.0, fTemp26);
		double fTemp28 = (0.0 - (40.100000000000001 * fTemp24));
		double fTemp29 = std::max<double>(-600.0, fTemp28);
		double fTemp30 = (((std::fabs(fTemp26) > 0.0001) ? ((fTemp27 < -50.0) ? (0.0 - (fTemp27 * std::exp(fTemp27))) : (fTemp27 / (1.0 - std::exp((-1.0 * fTemp27))))) : ((fTemp25 * ((134.00083333333336 * fTemp25) + 20.050000000000001)) + 1.0)) - ((std::fabs(fTemp28) > 0.0001) ? ((fTemp29 < -50.0) ? (0.0 - (fTemp29 * std::exp(fTemp29))) : (fTemp29 / (1.0 - std::exp((-1.0 * fTemp29))))) : ((fTemp28 * ((0.083333333333333329 * fTemp28) + 0.5)) + 1.0)));
		fRec20[0] = ((0.024937655860349125 * fTemp30) - (fConst22 * ((fConst38 * fRec20[2]) + (fConst39 * fRec20[1]))));
		double fTemp31 = (fRec20[2] + (fRec20[0] + (2.0 * fRec20[1])));
		fVec7[0] = fTemp31;
		fRec19[0] = ((fConst22 * ((fConst26 * fTemp31) + (fConst40 * fVec7[1]))) - (fConst41 * fRec19[1]));
		fRec18[0] = (0.0 - (fConst18 * ((fConst19 * fRec18[1]) - (fRec19[0] + fRec19[1]))));
		fRec17[0] = (fRec18[0] - (fConst14 * ((fConst42 * fRec17[2]) + (fConst45 * fRec17[1]))));
		double fTemp32 = (fRec17[2] + (fRec17[0] + (2.0 * fRec17[1])));
		fVec8[0] = fTemp32;
		fRec16[0] = ((fConst14 * ((fConst16 * fTemp32) + (fConst46 * fVec8[1]))) - (fConst48 * fRec16[1]));
		fRec15[0] = (fRec16[0] - (fConst9 * ((fConst49 * fRec15[2]) + (fConst50 * fRec15[1]))));
		double fTemp33 = (fConst60 * fRec14[1]);
		fRec14[0] = ((fConst9 * (((fConst11 * fRec15[0]) + (fConst51 * fRec15[1])) + (fConst11 * fRec15[2]))) - (fConst55 * ((fConst57 * fRec14[2]) + fTemp33)));
		double fTemp34 = std::max<double>(-1.0, std::min<double>(1.0, (fSlow3 * (fRec14[2] + (fConst55 * (fTemp33 + (fConst57 * fRec14[0])))))));
		fRec57[0] = ((fConst61 * fRec19[1]) - (fConst18 * ((fConst19 * fRec57[1]) - (fConst13 * fRec19[0]))));
		fRec56[0] = (fRec57[0] - (fConst14 * ((fConst42 * fRec56[2]) + (fConst45 * fRec56[1]))));
		double fTemp35 = (fConst50 * fRec55[1]);
		fRec55[0] = ((fConst14 * (((fConst44 * fRec56[0]) + (fConst62 * fRec56[1])) + (fConst44 * fRec56[2]))) - (fConst63 * ((fConst64 * fRec55[2]) + fTemp35)));
		double fTemp36 = (fConst60 * fRec54[1]);
		fRec54[0] = ((fRec55[2] + (fConst63 * (fTemp35 + (fConst64 * fRec55[0])))) - (fConst55 * ((fConst57 * fRec54[2]) + fTemp36)));
		double fTemp37 = std::max<double>(-1.0, std::min<double>(1.0, (fSlow6 * (fRec54[2] + (fConst55 * (fTemp36 + (fConst57 * fRec54[0])))))));
		fRec61[0] = (0.0 - (fConst67 * ((fConst47 * fRec61[1]) - (fConst14 * (fTemp32 + fVec8[1])))));
		fRec60[0] = (fRec61[0] - (fConst9 * ((fConst49 * fRec60[2]) + (fConst50 * fRec60[1]))));
		double fTemp38 = (fRec60[2] + (fRec60[0] + (2.0 * fRec60[1])));
		fVec9[0] = fTemp38;
		fRec59[0] = ((fConst9 * ((fConst66 * fTemp38) + (fConst68 * fVec9[1]))) - (fConst69 * fRec59[1]));
		fRec58[0] = (fRec59[0] - (fConst65 * ((fConst70 * fRec58[2]) + (fConst60 * fRec58[1]))));
		double fTemp39 = std::max<double>(-1.0, std::min<double>(1.0, (fSlow7 * (((fConst59 * fRec58[0]) + (fConst71 * fRec58[1])) + (fConst59 * fRec58[2])))));
		fRec63[0] = (0.0 - (fConst72 * ((fConst56 * fRec63[1]) - (fConst9 * (fTemp38 + fVec9[1])))));
		fRec62[0] = (fRec63[0] - (fConst65 * ((fConst70 * fRec62[2]) + (fConst60 * fRec62[1]))));
		double fTemp40 = std::max<double>(-1.0, std::min<double>(1.0, (fSlow8 * (fRec62[2] + (fRec62[0] + (2.0 * fRec62[1]))))));
		double fTemp41 = (((1.333521432 * (fTemp34 * (1.0 - (0.33333333333333331 * mydsp_faustpower2_f(fTemp34))))) + (1.584893192 * ((fTemp37 * (1.0 - (0.33333333333333331 * mydsp_faustpower2_f(fTemp37)))) + (fTemp39 * (1.0 - (0.33333333333333331 * mydsp_faustpower2_f(fTemp39))))))) + (1.2589412 * (fTemp40 * (1.0 - (0.33333333333333331 * mydsp_faustpower2_f(fTemp40))))));
		fVec10[0] = fTemp41;
		fRec13[0] = (0.0 - (fConst5 * ((fConst6 * fRec13[1]) - (fTemp41 + fVec10[1]))));
		double fTemp42 = (1.0 - fRec50[0]);
		double fTemp43 = (fRec21[0] * fTemp42);
		double fTemp44 = ((fSlow2 * fRec13[0]) + ((fTemp43 * ((fSlow9 * ((4.0 * (1.0 - std::fabs(fTemp43))) + -1.0)) + 1.0)) + (fSlow10 * fTemp30)));
		fVec11[0] = fTemp44;
		fRec12[0] = (0.0 - (fConst5 * ((fConst6 * fRec12[1]) - (fTemp44 + fVec11[1]))));
		fRec64[0] = (fSlow11 + (0.999 * fRec64[1]));
		double fTemp45 = (fRec12[0] * fRec64[0]);
		fVec12[0] = fTemp45;
		fRec11[0] = ((0.93028479253239138 * (fTemp45 + fVec12[1])) - (0.86056958506478287 * fRec11[1]));
		fRec10[0] = (fRec11[0] - ((1.8405051250752198 * fRec10[1]) + (0.86129424393186271 * fRec10[2])));
		double fTemp46 = (0.92544984225177063 * (fRec10[0] + fRec10[2]));
		double fTemp47 = (1.8508996845035413 * fRec10[1]);
		double fTemp48 = (fTemp47 + fTemp46);
		double fTemp49 = (fTemp48 / (double(Ranode(int(TUBE_TABLE_6V6_250k), double(fRec9[1]))) + 100000.0));
		fVec13[0] = fTemp49;
		fRec65[0] = (fConst5 * ((410.0 * (fTemp49 + fVec13[1])) - (fConst6 * fRec65[1])));
		double fTemp50 = double(Ftube(int(TUBE_TABLE_6V6_250k), double(((fTemp46 + (fRec65[0] + fTemp47)) + -0.65976100000000004))));
		fRec9[0] = ((fTemp50 + (0.0016091731707317074 * (double(Ranode(int(TUBE_TABLE_6V6_250k), double(fTemp50))) + 100000.0))) + -250.0);
		fRec8[0] = (fConst2 * ((fConst3 * fRec8[1]) + (0.025000000000000001 * (fRec9[0] - fRec9[1]))));
		double fTemp51 = (fTemp48 / (double(Ranode(int(TUBE_TABLE_6V6_68k), double(fRec67[1]))) + 100000.0));
		fVec14[0] = fTemp51;
		fRec68[0] = (fConst5 * ((410.0 * (fTemp51 + fVec14[1])) - (fConst6 * fRec68[1])));
		double fTemp52 = double(Ftube(int(TUBE_TABLE_6V6_68k), double(((fTemp46 + (fRec68[0] + fTemp47)) + -0.66454100000000005))));
		fRec67[0] = ((fTemp52 + (0.0016208317073170733 * (double(Ranode(int(TUBE_TABLE_6V6_68k), double(fTemp52))) + 100000.0))) + -250.0);
		fRec66[0] = (fConst2 * ((fConst3 * fRec66[1]) + (0.025000000000000001 * (fRec67[0] - fRec67[1]))));
		double fTemp53 = (std::min<double>(0.69999999999999996, fRec8[0]) + std::max<double>(-0.75, fRec66[0]));
		double fTemp54 = (0.5 * fRec0[1]);
		double fTemp55 = (0.40000000000000002 * fRec2[1]);
		double fTemp56 = (fTemp54 + ((0.29999999999999999 * fRec4[1]) + fTemp55));
		double fTemp57 = ((fTemp53 + (0.20000000000000001 * fRec6[1])) - fTemp56);
		fRec6[0] = fTemp57;
		double fRec7 = (0.0 - (0.20000000000000001 * fTemp57));
		fRec4[0] = (fRec7 + fRec6[1]);
		double fRec5 = (0.29999999999999999 * (fTemp53 - fTemp56));
		fRec2[0] = (fRec5 + fRec4[1]);
		double fRec3 = (0.40000000000000002 * (fTemp53 - (fTemp55 + fTemp54)));
		fRec0[0] = (fRec3 + fRec2[1]);
		double fRec1 = (0.5 * (fTemp53 - fTemp54));
		output0[i] = FAUSTFLOAT((fRec1 + fRec0[1]));
		fRec98[0] = ((0.93028479253239138 * (fRec94[1] + fRec94[2])) - (0.86056958506478287 * fRec98[1]));
		fRec97[0] = (fRec98[0] - ((1.8405051250752198 * fRec97[1]) + (0.86129424393186271 * fRec97[2])));
		double fTemp58 = (0.92544984225177063 * (fRec97[0] + fRec97[2]));
		double fTemp59 = (1.8508996845035413 * fRec97[1]);
		double fTemp60 = ((fTemp59 + fTemp58) / (double(Ranode(int(TUBE_TABLE_6DJ8_250k), double(fRec96[1]))) + 100000.0));
		fVec15[0] = fTemp60;
		fRec99[0] = (fConst28 * ((820.0 * (fTemp60 + fVec15[1])) - (fConst29 * fRec99[1])));
		double fTemp61 = double(Ftube(int(TUBE_TABLE_6DJ8_250k), double(((fTemp58 + (fRec99[0] + fTemp59)) + -0.79704299999999995))));
		fRec96[0] = ((fTemp61 + (0.00097200365853658533 * (double(Ranode(int(TUBE_TABLE_6DJ8_250k), double(fTemp61))) + 100000.0))) + -130.0);
		fRec95[0] = (fConst2 * ((fConst3 * fRec95[1]) + (0.050000000000000003 * (fRec96[0] - fRec96[1]))));
		fRec109[0] = ((0.93028479253239138 * (fRec105[1] + fRec105[2])) - (0.86056958506478287 * fRec109[1]));
		fRec108[0] = (fRec109[0] - ((1.8405051250752198 * fRec108[1]) + (0.86129424393186271 * fRec108[2])));
		double fTemp62 = (0.92544984225177063 * (fRec108[0] + fRec108[2]));
		double fTemp63 = (1.8508996845035413 * fRec108[1]);
		double fTemp64 = ((fTemp63 + fTemp62) / (double(Ranode(int(TUBE_TABLE_6DJ8_250k), double(fRec107[1]))) + 100000.0));
		fVec16[0] = fTemp64;
		fRec110[0] = (fConst31 * ((1500.0 * (fTemp64 + fVec16[1])) - (fConst32 * fRec110[1])));
		double fTemp65 = double(Ftube(int(TUBE_TABLE_6DJ8_250k), double(((fTemp62 + (fRec110[0] + fTemp63)) + -1.271609))));
		fRec107[0] = ((fTemp65 + (0.00084773933333333329 * (double(Ranode(int(TUBE_TABLE_6DJ8_250k), double(fTemp65))) + 100000.0))) + -130.0);
		fRec106[0] = (fConst2 * ((fConst3 * fRec106[1]) + (0.050000000000000003 * (fRec107[0] - fRec107[1]))));
		double fTemp66 = (double(input1[i]) * fRec46[0]);
		fVec17[0] = fTemp66;
		fRec114[0] = ((0.93028479253239138 * (fTemp66 + fVec17[1])) - (0.86056958506478287 * fRec114[1]));
		fRec113[0] = (fRec114[0] - ((1.8405051250752198 * fRec113[1]) + (0.86129424393186271 * fRec113[2])));
		double fTemp67 = (0.92544984225177063 * (fRec113[0] + fRec113[2]));
		double fTemp68 = (1.8508996845035413 * fRec113[1]);
		double fTemp69 = ((fTemp68 + fTemp67) / (double(Ranode(int(TUBE_TABLE_6DJ8_68k), double(fRec112[1]))) + 100000.0));
		fVec18[0] = fTemp69;
		fRec115[0] = (fConst34 * ((2700.0 * (fTemp69 + fVec18[1])) - (fConst35 * fRec115[1])));
		double fTemp70 = double(Ftube(int(TUBE_TABLE_6DJ8_68k), double(((fTemp67 + (fRec115[0] + fTemp68)) + -1.8639460000000001))));
		fRec112[0] = ((fTemp70 + (0.00069035037037037039 * (double(Ranode(int(TUBE_TABLE_6DJ8_68k), double(fTemp70))) + 100000.0))) + -130.0);
		fRec111[0] = (fConst2 * ((fConst3 * fRec111[1]) + (0.050000000000000003 * (fRec112[0] - fRec112[1]))));
		fRec105[0] = ((0.59999999999999998 * fRec106[0]) + fRec111[0]);
		fRec104[0] = (0.0 - (fConst5 * ((fConst6 * fRec104[1]) - (fRec105[0] + fRec105[1]))));
		fRec103[0] = ((0.93028479253239138 * (fRec104[0] + fRec104[1])) - (0.86056958506478287 * fRec103[1]));
		fRec102[0] = (fRec103[0] - ((1.8405051250752198 * fRec102[1]) + (0.86129424393186271 * fRec102[2])));
		double fTemp71 = (0.92544984225177063 * (fRec102[0] + fRec102[2]));
		double fTemp72 = (1.8508996845035413 * fRec102[1]);
		double fTemp73 = ((fTemp72 + fTemp71) / (double(Ranode(int(TUBE_TABLE_6DJ8_250k), double(fRec101[1]))) + 100000.0));
		fVec19[0] = fTemp73;
		fRec116[0] = (fConst31 * ((1500.0 * (fTemp73 + fVec19[1])) - (fConst32 * fRec116[1])));
		double fTemp74 = double(Ftube(int(TUBE_TABLE_6DJ8_250k), double(((fTemp71 + (fRec116[0] + fTemp72)) + -1.271609))));
		fRec101[0] = ((fTemp74 + (0.00084773933333333329 * (double(Ranode(int(TUBE_TABLE_6DJ8_250k), double(fTemp74))) + 100000.0))) + -130.0);
		fRec100[0] = (fConst2 * ((fConst3 * fRec100[1]) + (0.050000000000000003 * (fRec101[0] - fRec101[1]))));
		fRec94[0] = ((0.59999999999999998 * fRec95[0]) + fRec100[0]);
		fRec93[0] = ((0.93028479253239138 * (fRec94[0] + fRec94[1])) - (0.86056958506478287 * fRec93[1]));
		fRec92[0] = (fRec93[0] - ((1.8405051250752198 * fRec92[1]) + (0.86129424393186271 * fRec92[2])));
		double fTemp75 = (0.92544984225177063 * (fRec92[0] + fRec92[2]));
		double fTemp76 = (1.8508996845035413 * fRec92[1]);
		double fTemp77 = ((fTemp76 + fTemp75) / (double(Ranode(int(TUBE_TABLE_6DJ8_250k), double(fRec91[1]))) + 100000.0));
		fVec20[0] = fTemp77;
		fRec117[0] = (fConst28 * ((820.0 * (fTemp77 + fVec20[1])) - (fConst29 * fRec117[1])));
		double fTemp78 = double(Ftube(int(TUBE_TABLE_6DJ8_250k), double(((fTemp75 + (fRec117[0] + fTemp76)) + -0.79704299999999995))));
		fRec91[0] = ((fTemp78 + (0.00097200365853658533 * (double(Ranode(int(TUBE_TABLE_6DJ8_250k), double(fTemp78))) + 100000.0))) + -130.0);
		fRec90[0] = (fConst2 * ((fConst3 * fRec90[1]) + (0.050000000000000003 * (fRec91[0] - fRec91[1]))));
		double fTemp79 = (fRec50[0] * fRec90[0]);
		double fTemp80 = std::fabs(fTemp79);
		fRec118[0] = ((0.99990000000000001 * fRec118[1]) + (9.9999999999988987e-05 * fTemp80));
		double fTemp81 = std::max<double>(fRec118[0], fTemp80);
		fVec21[(IOTA & 32767)] = fTemp81;
		fRec120[0] = ((fTemp81 + fRec120[1]) - fVec21[((IOTA - iConst37) & 32767)]);
		fRec119[0] = ((0.999 * fRec119[1]) + (fConst36 * fRec120[0]));
		double fTemp82 = std::max<double>(-1.0, std::min<double>(-0.01, (fTemp81 + (-1.0 - (1.02 * fRec119[0])))));
		double fTemp83 = (fTemp79 - fTemp82);
		double fTemp84 = (40.100000000000001 * fTemp83);
		double fTemp85 = std::max<double>(-600.0, fTemp84);
		double fTemp86 = (0.0 - (40.100000000000001 * fTemp82));
		double fTemp87 = std::max<double>(-600.0, fTemp86);
		double fTemp88 = (((std::fabs(fTemp84) > 0.0001) ? ((fTemp85 < -50.0) ? (0.0 - (fTemp85 * std::exp(fTemp85))) : (fTemp85 / (1.0 - std::exp((-1.0 * fTemp85))))) : ((fTemp83 * ((134.00083333333336 * fTemp83) + 20.050000000000001)) + 1.0)) - ((std::fabs(fTemp86) > 0.0001) ? ((fTemp87 < -50.0) ? (0.0 - (fTemp87 * std::exp(fTemp87))) : (fTemp87 / (1.0 - std::exp((-1.0 * fTemp87))))) : ((fTemp86 * ((0.083333333333333329 * fTemp86) + 0.5)) + 1.0)));
		fRec89[0] = ((0.024937655860349125 * fTemp88) - (fConst22 * ((fConst38 * fRec89[2]) + (fConst39 * fRec89[1]))));
		double fTemp89 = (fRec89[2] + (fRec89[0] + (2.0 * fRec89[1])));
		fVec22[0] = fTemp89;
		fRec88[0] = ((fConst22 * ((fConst26 * fTemp89) + (fConst40 * fVec22[1]))) - (fConst41 * fRec88[1]));
		fRec87[0] = (0.0 - (fConst18 * ((fConst19 * fRec87[1]) - (fRec88[0] + fRec88[1]))));
		fRec86[0] = (fRec87[0] - (fConst14 * ((fConst42 * fRec86[2]) + (fConst45 * fRec86[1]))));
		double fTemp90 = (fRec86[2] + (fRec86[0] + (2.0 * fRec86[1])));
		fVec23[0] = fTemp90;
		fRec85[0] = ((fConst14 * ((fConst16 * fTemp90) + (fConst46 * fVec23[1]))) - (fConst48 * fRec85[1]));
		fRec84[0] = (fRec85[0] - (fConst9 * ((fConst49 * fRec84[2]) + (fConst50 * fRec84[1]))));
		double fTemp91 = (fConst60 * fRec83[1]);
		fRec83[0] = ((fConst9 * (((fConst11 * fRec84[0]) + (fConst51 * fRec84[1])) + (fConst11 * fRec84[2]))) - (fConst55 * ((fConst57 * fRec83[2]) + fTemp91)));
		double fTemp92 = std::max<double>(-1.0, std::min<double>(1.0, (fSlow3 * (fRec83[2] + (fConst55 * (fTemp91 + (fConst57 * fRec83[0])))))));
		fRec124[0] = ((fConst61 * fRec88[1]) - (fConst18 * ((fConst19 * fRec124[1]) - (fConst13 * fRec88[0]))));
		fRec123[0] = (fRec124[0] - (fConst14 * ((fConst42 * fRec123[2]) + (fConst45 * fRec123[1]))));
		double fTemp93 = (fConst50 * fRec122[1]);
		fRec122[0] = ((fConst14 * (((fConst44 * fRec123[0]) + (fConst62 * fRec123[1])) + (fConst44 * fRec123[2]))) - (fConst63 * ((fConst64 * fRec122[2]) + fTemp93)));
		double fTemp94 = (fConst60 * fRec121[1]);
		fRec121[0] = ((fRec122[2] + (fConst63 * (fTemp93 + (fConst64 * fRec122[0])))) - (fConst55 * ((fConst57 * fRec121[2]) + fTemp94)));
		double fTemp95 = std::max<double>(-1.0, std::min<double>(1.0, (fSlow6 * (fRec121[2] + (fConst55 * (fTemp94 + (fConst57 * fRec121[0])))))));
		fRec128[0] = (0.0 - (fConst67 * ((fConst47 * fRec128[1]) - (fConst14 * (fTemp90 + fVec23[1])))));
		fRec127[0] = (fRec128[0] - (fConst9 * ((fConst49 * fRec127[2]) + (fConst50 * fRec127[1]))));
		double fTemp96 = (fRec127[2] + (fRec127[0] + (2.0 * fRec127[1])));
		fVec24[0] = fTemp96;
		fRec126[0] = ((fConst9 * ((fConst66 * fTemp96) + (fConst68 * fVec24[1]))) - (fConst69 * fRec126[1]));
		fRec125[0] = (fRec126[0] - (fConst65 * ((fConst70 * fRec125[2]) + (fConst60 * fRec125[1]))));
		double fTemp97 = std::max<double>(-1.0, std::min<double>(1.0, (fSlow7 * (((fConst59 * fRec125[0]) + (fConst71 * fRec125[1])) + (fConst59 * fRec125[2])))));
		fRec130[0] = (0.0 - (fConst72 * ((fConst56 * fRec130[1]) - (fConst9 * (fTemp96 + fVec24[1])))));
		fRec129[0] = (fRec130[0] - (fConst65 * ((fConst70 * fRec129[2]) + (fConst60 * fRec129[1]))));
		double fTemp98 = std::max<double>(-1.0, std::min<double>(1.0, (fSlow8 * (fRec129[2] + (fRec129[0] + (2.0 * fRec129[1]))))));
		double fTemp99 = (((1.333521432 * (fTemp92 * (1.0 - (0.33333333333333331 * mydsp_faustpower2_f(fTemp92))))) + (1.584893192 * ((fTemp95 * (1.0 - (0.33333333333333331 * mydsp_faustpower2_f(fTemp95)))) + (fTemp97 * (1.0 - (0.33333333333333331 * mydsp_faustpower2_f(fTemp97))))))) + (1.2589412 * (fTemp98 * (1.0 - (0.33333333333333331 * mydsp_faustpower2_f(fTemp98))))));
		fVec25[0] = fTemp99;
		fRec82[0] = (0.0 - (fConst5 * ((fConst6 * fRec82[1]) - (fTemp99 + fVec25[1]))));
		double fTemp100 = (fRec90[0] * fTemp42);
		double fTemp101 = ((fSlow2 * fRec82[0]) + ((fTemp100 * ((fSlow9 * ((4.0 * (1.0 - std::fabs(fTemp100))) + -1.0)) + 1.0)) + (fSlow10 * fTemp88)));
		fVec26[0] = fTemp101;
		fRec81[0] = (0.0 - (fConst5 * ((fConst6 * fRec81[1]) - (fTemp101 + fVec26[1]))));
		double fTemp102 = (fRec64[0] * fRec81[0]);
		fVec27[0] = fTemp102;
		fRec80[0] = ((0.93028479253239138 * (fTemp102 + fVec27[1])) - (0.86056958506478287 * fRec80[1]));
		fRec79[0] = (fRec80[0] - ((1.8405051250752198 * fRec79[1]) + (0.86129424393186271 * fRec79[2])));
		double fTemp103 = (0.92544984225177063 * (fRec79[0] + fRec79[2]));
		double fTemp104 = (1.8508996845035413 * fRec79[1]);
		double fTemp105 = (fTemp104 + fTemp103);
		double fTemp106 = (fTemp105 / (double(Ranode(int(TUBE_TABLE_6V6_250k), double(fRec78[1]))) + 100000.0));
		fVec28[0] = fTemp106;
		fRec131[0] = (fConst5 * ((410.0 * (fTemp106 + fVec28[1])) - (fConst6 * fRec131[1])));
		double fTemp107 = double(Ftube(int(TUBE_TABLE_6V6_250k), double(((fTemp103 + (fRec131[0] + fTemp104)) + -0.65976100000000004))));
		fRec78[0] = ((fTemp107 + (0.0016091731707317074 * (double(Ranode(int(TUBE_TABLE_6V6_250k), double(fTemp107))) + 100000.0))) + -250.0);
		fRec77[0] = (fConst2 * ((fConst3 * fRec77[1]) + (0.025000000000000001 * (fRec78[0] - fRec78[1]))));
		double fTemp108 = (fTemp105 / (double(Ranode(int(TUBE_TABLE_6V6_68k), double(fRec133[1]))) + 100000.0));
		fVec29[0] = fTemp108;
		fRec134[0] = (fConst5 * ((410.0 * (fTemp108 + fVec29[1])) - (fConst6 * fRec134[1])));
		double fTemp109 = double(Ftube(int(TUBE_TABLE_6V6_68k), double(((fTemp103 + (fRec134[0] + fTemp104)) + -0.66454100000000005))));
		fRec133[0] = ((fTemp109 + (0.0016208317073170733 * (double(Ranode(int(TUBE_TABLE_6V6_68k), double(fTemp109))) + 100000.0))) + -250.0);
		fRec132[0] = (fConst2 * ((fConst3 * fRec132[1]) + (0.025000000000000001 * (fRec133[0] - fRec133[1]))));
		double fTemp110 = (std::min<double>(0.69999999999999996, fRec77[0]) + std::max<double>(-0.75, fRec132[0]));
		double fTemp111 = (0.5 * fRec69[1]);
		double fTemp112 = (0.40000000000000002 * fRec71[1]);
		double fTemp113 = (fTemp111 + ((0.29999999999999999 * fRec73[1]) + fTemp112));
		double fTemp114 = ((fTemp110 + (0.20000000000000001 * fRec75[1])) - fTemp113);
		fRec75[0] = fTemp114;
		double fRec76 = (0.0 - (0.20000000000000001 * fTemp114));
		fRec73[0] = (fRec76 + fRec75[1]);
		double fRec74 = (0.29999999999999999 * (fTemp110 - fTemp113));
		fRec71[0] = (fRec74 + fRec73[1]);
		double fRec72 = (0.40000000000000002 * (fTemp110 - (fTemp112 + fTemp111)));
		fRec69[0] = (fRec72 + fRec71[1]);
		double fRec70 = (0.5 * (fTemp110 - fTemp111));
		output1[i] = FAUSTFLOAT((fRec70 + fRec69[1]));
		fRec29[1] = fRec29[0];
		fRec28[2] = fRec28[1];
		fRec28[1] = fRec28[0];
		fVec0[1] = fVec0[0];
		fRec30[1] = fRec30[0];
		fRec27[1] = fRec27[0];
		fRec26[1] = fRec26[0];
		fRec40[1] = fRec40[0];
		fRec39[2] = fRec39[1];
		fRec39[1] = fRec39[0];
		fVec1[1] = fVec1[0];
		fRec41[1] = fRec41[0];
		fRec38[1] = fRec38[0];
		fRec37[1] = fRec37[0];
		fRec46[1] = fRec46[0];
		fVec2[1] = fVec2[0];
		fRec45[1] = fRec45[0];
		fRec44[2] = fRec44[1];
		fRec44[1] = fRec44[0];
		fVec3[1] = fVec3[0];
		fRec47[1] = fRec47[0];
		fRec43[1] = fRec43[0];
		fRec42[1] = fRec42[0];
		fRec36[2] = fRec36[1];
		fRec36[1] = fRec36[0];
		fRec35[1] = fRec35[0];
		fRec34[1] = fRec34[0];
		fRec33[2] = fRec33[1];
		fRec33[1] = fRec33[0];
		fVec4[1] = fVec4[0];
		fRec48[1] = fRec48[0];
		fRec32[1] = fRec32[0];
		fRec31[1] = fRec31[0];
		fRec25[2] = fRec25[1];
		fRec25[1] = fRec25[0];
		fRec24[1] = fRec24[0];
		fRec23[2] = fRec23[1];
		fRec23[1] = fRec23[0];
		fVec5[1] = fVec5[0];
		fRec49[1] = fRec49[0];
		fRec22[1] = fRec22[0];
		fRec21[1] = fRec21[0];
		fRec50[1] = fRec50[0];
		fRec51[1] = fRec51[0];
		IOTA = (IOTA + 1);
		fRec53[1] = fRec53[0];
		fRec52[1] = fRec52[0];
		fRec20[2] = fRec20[1];
		fRec20[1] = fRec20[0];
		fVec7[1] = fVec7[0];
		fRec19[1] = fRec19[0];
		fRec18[1] = fRec18[0];
		fRec17[2] = fRec17[1];
		fRec17[1] = fRec17[0];
		fVec8[1] = fVec8[0];
		fRec16[1] = fRec16[0];
		fRec15[2] = fRec15[1];
		fRec15[1] = fRec15[0];
		fRec14[2] = fRec14[1];
		fRec14[1] = fRec14[0];
		fRec57[1] = fRec57[0];
		fRec56[2] = fRec56[1];
		fRec56[1] = fRec56[0];
		fRec55[2] = fRec55[1];
		fRec55[1] = fRec55[0];
		fRec54[2] = fRec54[1];
		fRec54[1] = fRec54[0];
		fRec61[1] = fRec61[0];
		fRec60[2] = fRec60[1];
		fRec60[1] = fRec60[0];
		fVec9[1] = fVec9[0];
		fRec59[1] = fRec59[0];
		fRec58[2] = fRec58[1];
		fRec58[1] = fRec58[0];
		fRec63[1] = fRec63[0];
		fRec62[2] = fRec62[1];
		fRec62[1] = fRec62[0];
		fVec10[1] = fVec10[0];
		fRec13[1] = fRec13[0];
		fVec11[1] = fVec11[0];
		fRec12[1] = fRec12[0];
		fRec64[1] = fRec64[0];
		fVec12[1] = fVec12[0];
		fRec11[1] = fRec11[0];
		fRec10[2] = fRec10[1];
		fRec10[1] = fRec10[0];
		fVec13[1] = fVec13[0];
		fRec65[1] = fRec65[0];
		fRec9[1] = fRec9[0];
		fRec8[1] = fRec8[0];
		fVec14[1] = fVec14[0];
		fRec68[1] = fRec68[0];
		fRec67[1] = fRec67[0];
		fRec66[1] = fRec66[0];
		fRec6[1] = fRec6[0];
		fRec4[1] = fRec4[0];
		fRec2[1] = fRec2[0];
		fRec0[1] = fRec0[0];
		fRec98[1] = fRec98[0];
		fRec97[2] = fRec97[1];
		fRec97[1] = fRec97[0];
		fVec15[1] = fVec15[0];
		fRec99[1] = fRec99[0];
		fRec96[1] = fRec96[0];
		fRec95[1] = fRec95[0];
		fRec109[1] = fRec109[0];
		fRec108[2] = fRec108[1];
		fRec108[1] = fRec108[0];
		fVec16[1] = fVec16[0];
		fRec110[1] = fRec110[0];
		fRec107[1] = fRec107[0];
		fRec106[1] = fRec106[0];
		fVec17[1] = fVec17[0];
		fRec114[1] = fRec114[0];
		fRec113[2] = fRec113[1];
		fRec113[1] = fRec113[0];
		fVec18[1] = fVec18[0];
		fRec115[1] = fRec115[0];
		fRec112[1] = fRec112[0];
		fRec111[1] = fRec111[0];
		fRec105[2] = fRec105[1];
		fRec105[1] = fRec105[0];
		fRec104[1] = fRec104[0];
		fRec103[1] = fRec103[0];
		fRec102[2] = fRec102[1];
		fRec102[1] = fRec102[0];
		fVec19[1] = fVec19[0];
		fRec116[1] = fRec116[0];
		fRec101[1] = fRec101[0];
		fRec100[1] = fRec100[0];
		fRec94[2] = fRec94[1];
		fRec94[1] = fRec94[0];
		fRec93[1] = fRec93[0];
		fRec92[2] = fRec92[1];
		fRec92[1] = fRec92[0];
		fVec20[1] = fVec20[0];
		fRec117[1] = fRec117[0];
		fRec91[1] = fRec91[0];
		fRec90[1] = fRec90[0];
		fRec118[1] = fRec118[0];
		fRec120[1] = fRec120[0];
		fRec119[1] = fRec119[0];
		fRec89[2] = fRec89[1];
		fRec89[1] = fRec89[0];
		fVec22[1] = fVec22[0];
		fRec88[1] = fRec88[0];
		fRec87[1] = fRec87[0];
		fRec86[2] = fRec86[1];
		fRec86[1] = fRec86[0];
		fVec23[1] = fVec23[0];
		fRec85[1] = fRec85[0];
		fRec84[2] = fRec84[1];
		fRec84[1] = fRec84[0];
		fRec83[2] = fRec83[1];
		fRec83[1] = fRec83[0];
		fRec124[1] = fRec124[0];
		fRec123[2] = fRec123[1];
		fRec123[1] = fRec123[0];
		fRec122[2] = fRec122[1];
		fRec122[1] = fRec122[0];
		fRec121[2] = fRec121[1];
		fRec121[1] = fRec121[0];
		fRec128[1] = fRec128[0];
		fRec127[2] = fRec127[1];
		fRec127[1] = fRec127[0];
		fVec24[1] = fVec24[0];
		fRec126[1] = fRec126[0];
		fRec125[2] = fRec125[1];
		fRec125[1] = fRec125[0];
		fRec130[1] = fRec130[0];
		fRec129[2] = fRec129[1];
		fRec129[1] = fRec129[0];
		fVec25[1] = fVec25[0];
		fRec82[1] = fRec82[0];
		fVec26[1] = fVec26[0];
		fRec81[1] = fRec81[0];
		fVec27[1] = fVec27[0];
		fRec80[1] = fRec80[0];
		fRec79[2] = fRec79[1];
		fRec79[1] = fRec79[0];
		fVec28[1] = fVec28[0];
		fRec131[1] = fRec131[0];
		fRec78[1] = fRec78[0];
		fRec77[1] = fRec77[0];
		fVec29[1] = fVec29[0];
		fRec134[1] = fRec134[0];
		fRec133[1] = fRec133[0];
		fRec132[1] = fRec132[0];
		fRec75[1] = fRec75[0];
		fRec73[1] = fRec73[0];
		fRec71[1] = fRec71[0];
		fRec69[1] = fRec69[0];
	}
#undef fVslider0
#undef fVslider1
#undef fVslider2
#undef fVslider3
}

void __rt_func Dsp::compute_static(int count, FAUSTFLOAT *input0, FAUSTFLOAT *input1, FAUSTFLOAT *output0, FAUSTFLOAT *output1, PluginLV2 *p)
{
	static_cast<Dsp*>(p)->compute(count, input0, input1, output0, output1);
}


void Dsp::connect(uint32_t port,void* data)
{
	switch ((PortIndex)port)
	{
	case DRIVE: 
		fVslider0_ = (float*)data; // , 0.34999999999999998, 0.0, 1.0, 0.01 
		break;
	case WET_DRY: 
		fVslider2_ = (float*)data; // , 100.0, 0.0, 100.0, 1.0 
		break;
	case PREGAIN: 
		fVslider1_ = (float*)data; // , -6.0, -20.0, 20.0, 0.10000000000000001 
		break;
	case GAIN1: 
		fVslider3_ = (float*)data; // , -6.0, -20.0, 20.0, 0.10000000000000001 
		break;
	default:
		break;
	}
}

void Dsp::connect_static(uint32_t port,void* data, PluginLV2 *p)
{
	static_cast<Dsp*>(p)->connect(port, data);
}


PluginLV2 *plugin() {
	return new Dsp();
}

void Dsp::del_instance(PluginLV2 *p)
{
	delete static_cast<Dsp*>(p);
}

/*
typedef enum
{
   DRIVE, 
   WET_DRY, 
   PREGAIN, 
   GAIN1, 
} PortIndex;
*/

} // end namespace gxamp6_stereo
