#! /usr/bin/env python
# encoding: utf-8

from waflib import Task, Options, Logs
import shutil, os, os.path 

def options(opt):
    pass

def configure(conf):
    LD = conf.find_program('ld')

def img2h(task):
    src = " ".join(["'%s_png'" % os.path.splitext(v.name)[0] for v in task.inputs[0:]])
    cmd = ("rm -f ../src/LV2/xputty/resources/xresources.h && \
    for f in %s; do echo 'EXTLD('$f')' >> ../src/LV2/xputty/resources/xresources.h; done" % src)
    ret = task.exec_command(cmd, shell=True)
    return ret
    

def img2obj(task):
    env = task.env
    task.no_errcheck_out = True
    img2h(task)
    before = ['xcairo']
    src = " ".join(["'%s'" % v.bldpath() for v in task.inputs[0:]])
    ssrc = " ".join(["'%s.png'" % os.path.splitext(v.name)[0] for v in task.inputs[0:]])
    cmd = (" cp %s src/LV2/xputty/resources/ \
    && cd src/LV2/xputty/resources/ \
    && %s -r -b binary %s -o  resources.o " % (src, env.LD[0], ssrc) )
   # Logs.debug("runner: system command -> %s" % cmd)
    ret = task.exec_command(cmd, shell=True)
    return ret

def build(bld):
    if not (bld.env.LV2GUI):
        return
    if os.path.isfile('%s/src/LV2/xputty/resources/resources.o' % bld.out_dir):
        return
    resources = bld.path.ant_glob('*.png')

    res = bld(name = 'resources.o',
        rule = img2obj,
        source = resources,
        target = 'resources.o'
        )
    res.install_path = None
    bld.add_group()
